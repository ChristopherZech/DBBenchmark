// Generated by CoffeeScript 1.8.0
(function() {
  var Chart, Serie, start,
    __slice = [].slice;

  Chart = (function() {
    function Chart() {
      var id, series, title;
      id = arguments[0], title = arguments[1], series = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
      this.id = id;
      this.title = title;
      this.series = series;
    }

    Chart.prototype.getChartData = function() {
      return {
        chart: {
          zoomType: "xy"
        },
        title: {
          text: this.title
        },
        series: this.series
      };
    };

    Chart.prototype.draw = function() {
      console.log(JSON.stringify(this.getChartData()));
      return $("#" + this.id).highcharts(this.getChartData());
    };

    return Chart;

  })();

  Serie = (function() {
    function Serie(computer, disk, test, layout, chartType) {
      this.computer = computer;
      this.disk = disk;
      this.test = test;
      this.layout = layout;
      this.chartType = chartType != null ? chartType : "line";
      this.query();
      this.formatData();
    }

    Serie.prototype.query = function() {
      $.ajaxSetup({
        async: false
      });
      return this.rawData = $.getJSON("../results/" + this.computer + "-" + this.disk + "-" + this.test + "-" + this.layout + ".json").responseJSON;
    };

    Serie.prototype.formatData = function() {
      var d, _i, _len, _ref;
      this.data = [];
      if (this.chartType === "line") {
        if (this.rawData.measurements.length === 1) {
          this.data.push([0, this.rawData.measurements[0].duration / 1000000000]);
        }
        _ref = this.rawData.measurements;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          d = _ref[_i];
          this.data.push([d.size / 1024, d.duration / 1000000000]);
        }
      } else {
        this.data.push(this.rawData.measurements[0].duration / 1000000000);
      }
      return 0;
    };

    Serie.prototype.get = function() {
      return {
        type: this.chartType,
        name: this.test,
        data: this.data
      };
    };

    return Serie;

  })();

  start = function() {
    var c, unordered16kb, unordered16kb4PpE, unordered2xRel, unorderedStandard;
    unorderedStandard = new Serie("auriga", "sdb", "FullTableScan", "unordered", "column");
    unordered2xRel = new Serie("auriga", "sdb", "FullTableScan", "unordered-2x-rel", "column");
    unordered16kb = new Serie("auriga", "sdb", "FullTableScan", "unordered-16kb-Page", "column");
    unordered16kb4PpE = new Serie("auriga", "sdb", "FullTableScan", "unordered-2x-rel-16kb-4-PpE", "column");
    c = new Chart("c1", "abc", unorderedStandard.get(), unordered2xRel.get(), unordered16kb.get(), unordered16kb4PpE.get());
    return c.draw();
  };

  $(document).ready(start);

}).call(this);

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_index_write_8cpp" kind="file">
    <compoundname>IndexWrite.cpp</compoundname>
    <includes refid="_index_write_8h" local="yes">IndexWrite.h</includes>
    <includes refid="_progressbar_8h" local="yes">../Util/Progressbar.h</includes>
    <incdepgraph>
      <node id="779">
        <label>sys/stat.h</label>
      </node>
      <node id="792">
        <label>atomic</label>
      </node>
      <node id="773">
        <label>src/Tests/IndexWrite.cpp</label>
        <link refid="IndexWrite.cpp"/>
        <childnode refid="774" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
      </node>
      <node id="794">
        <label>../Util/Progressbar.h</label>
        <link refid="_progressbar_8h"/>
        <childnode refid="795" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
      </node>
      <node id="776">
        <label>../Util/Disk.h</label>
        <link refid="_disk_8h"/>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
      </node>
      <node id="795">
        <label>stdint.h</label>
      </node>
      <node id="785">
        <label>../Layout/Relationship.h</label>
        <link refid="_relationship_8h"/>
        <childnode refid="782" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
      </node>
      <node id="780">
        <label>fcntl.h</label>
      </node>
      <node id="787">
        <label>../Util/Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="790">
        <label>string</label>
      </node>
      <node id="783">
        <label>sys/ioctl.h</label>
      </node>
      <node id="791">
        <label>fstream</label>
      </node>
      <node id="784">
        <label>linux/hdreg.h</label>
      </node>
      <node id="778">
        <label>sys/types.h</label>
      </node>
      <node id="781">
        <label>unistd.h</label>
      </node>
      <node id="786">
        <label>vector</label>
      </node>
      <node id="789">
        <label>time.h</label>
      </node>
      <node id="782">
        <label>iostream</label>
      </node>
      <node id="777">
        <label>unordered_map</label>
      </node>
      <node id="774">
        <label>IndexWrite.h</label>
        <link refid="_index_write_8h"/>
        <childnode refid="775" relation="include">
        </childnode>
      </node>
      <node id="793">
        <label>thread</label>
      </node>
      <node id="775">
        <label>ATest.h</label>
        <link refid="_a_test_8h"/>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
      <node id="788">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_h_d_d_test">HDDTest</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>IndexWrite.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Nov<sp/>8,<sp/>2014</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>root</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_index_write_8h" kindref="compound">IndexWrite.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Util/Progressbar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HDDTest</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_h_d_d_test_1_1_index_write_1ad5adafd055f5090a353cc0d516720fda" refkind="member"><highlight class="normal"><ref refid="class_h_d_d_test_1_1_index_write_1ad5adafd055f5090a353cc0d516720fda" kindref="member">IndexWrite::IndexWrite</ref>(std::string<sp/>name,<sp/><ref refid="class_h_d_d_test_1_1_disk" kindref="compound">Disk</ref><sp/>*disk,<sp/><ref refid="class_h_d_d_test_1_1_relationship" kindref="compound">Relationship</ref><sp/>*relationship)<sp/>:<sp/><ref refid="class_h_d_d_test_1_1_a_test" kindref="compound">ATest</ref>(name,<sp/>disk,<sp/>relationship)<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_h_d_d_test_1_1_index_write_1afe685020b557ab773d4804d290cc361b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_test_1_1_index_write_1afe685020b557ab773d4804d290cc361b" kindref="member">IndexWrite::executeTestAlgorithm</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iterations<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>stepSize<sp/>=<sp/>(this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a2c3b0b7b9ec6c37f8dce5cceba4b728e" kindref="member">relationship</ref>-&gt;<ref refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" kindref="member">extents</ref>.size()<sp/>*<sp/>8)<sp/>/<sp/>iterations;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stepSize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepSize<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>processedData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_h_d_d_test_1_1_progressbar" kindref="compound">Progressbar</ref><sp/>*progress<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_test_1_1_progressbar" kindref="compound">Progressbar</ref>(</highlight><highlight class="stringliteral">&quot;Index<sp/>Write&quot;</highlight><highlight class="normal">,<sp/>(iterations<sp/>+<sp/>1)*iterations<sp/>/<sp/>2<sp/>*<sp/>stepSize);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>iterations;<sp/>i++)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_h_d_d_test_1_1_a_test_1ac32f948a2541934bba8137e20987bf71" kindref="member">isMain</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a5db6314a0231c885e25a9c98ea41e95a" kindref="member">log</ref>-&gt;<ref refid="class_d_b_util_1_1_log_1a64073692efb1f1b5bde7af7faee62e8c" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processedData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i<sp/>*<sp/>stepSize;<sp/>j++)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a8299c80c0778b70fabcc8af49e3f0334" kindref="member">disk</ref>-&gt;<ref refid="class_h_d_d_test_1_1_disk_1a538c61b9ff956231d7f05d19419eada1" kindref="member">writePage</ref>(this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a2c3b0b7b9ec6c37f8dce5cceba4b728e" kindref="member">relationship</ref>-&gt;<ref refid="class_h_d_d_test_1_1_relationship_1af1efe5fc2eda8fc97af447db84247c1f" kindref="member">getRandomPage</ref>());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processedData<sp/>+=<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>todo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a3b5cdf4b9fef9a7c74ec02755a08df24" kindref="member">runs</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progress-&gt;<ref refid="class_h_d_d_test_1_1_progressbar_1a031bb6b1e7a3305d441bc10353c37966" kindref="member">add</ref>(1);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_h_d_d_test_1_1_a_test_1ac32f948a2541934bba8137e20987bf71" kindref="member">isMain</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a5db6314a0231c885e25a9c98ea41e95a" kindref="member">log</ref>-&gt;<ref refid="class_d_b_util_1_1_log_1ae6a543277090bfe89db07e49a71ec4e1" kindref="member">stop</ref>(processedData);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_h_d_d_test_1_1_a_test_1a34afdf1fdbea73fd11422392eeb88320" kindref="member">sleep</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_h_d_d_test_1_1_index_write_1ac936ba268793c1cf380668fa82382afa" refkind="member"><highlight class="normal"><ref refid="class_h_d_d_test_1_1_index_write_1ac936ba268793c1cf380668fa82382afa" kindref="member">IndexWrite::~IndexWrite</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>HDDTest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/christiandeckert/workspace/DBBenchmark/src/Tests/IndexWrite.cpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_configurator_8cpp" kind="file">
    <compoundname>Configurator.cpp</compoundname>
    <includes refid="_configurator_8h" local="yes">Configurator.h</includes>
    <incdepgraph>
      <node id="612">
        <label>sys/stat.h</label>
      </node>
      <node id="620">
        <label>atomic</label>
      </node>
      <node id="606">
        <label>../Layout/Layout.h</label>
        <link refid="_layout_8h"/>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="608" relation="include">
        </childnode>
        <childnode refid="609" relation="include">
        </childnode>
      </node>
      <node id="610">
        <label>../Util/Disk.h</label>
        <link refid="_disk_8h"/>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="611" relation="include">
        </childnode>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
      </node>
      <node id="608">
        <label>cmath</label>
      </node>
      <node id="607">
        <label>Relationship.h</label>
        <link refid="_relationship_8h"/>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>fcntl.h</label>
      </node>
      <node id="615">
        <label>../Util/Log.h</label>
        <link refid="_log_8h"/>
        <childnode refid="616" relation="include">
        </childnode>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
      </node>
      <node id="618">
        <label>string</label>
      </node>
      <node id="622">
        <label>IndexScan.h</label>
        <link refid="_index_scan_8h"/>
        <childnode refid="614" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>rapidjson/document.h</label>
      </node>
      <node id="619">
        <label>fstream</label>
      </node>
      <node id="598">
        <label>Configurator.h</label>
        <link refid="_configurator_8h"/>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
      </node>
      <node id="611">
        <label>sys/types.h</label>
      </node>
      <node id="602">
        <label>unistd.h</label>
      </node>
      <node id="603">
        <label>vector</label>
      </node>
      <node id="617">
        <label>time.h</label>
      </node>
      <node id="601">
        <label>iostream</label>
      </node>
      <node id="597">
        <label>src/Util/Configurator.cpp</label>
        <link refid="Configurator.cpp"/>
        <childnode refid="598" relation="include">
        </childnode>
      </node>
      <node id="604">
        <label>unordered_map</label>
      </node>
      <node id="605">
        <label>../Tests/TestScenario.h</label>
        <link refid="_test_scenario_8h"/>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
      </node>
      <node id="621">
        <label>thread</label>
      </node>
      <node id="609">
        <label>algorithm</label>
      </node>
      <node id="614">
        <label>ATest.h</label>
        <link refid="_a_test_8h"/>
        <childnode refid="610" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
      </node>
      <node id="616">
        <label>inttypes.h</label>
      </node>
      <node id="600">
        <label>rapidjson/filestream.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_h_d_d_test">HDDTest</innernamespace>
    <innernamespace refid="namespacerapidjson">rapidjson</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="4"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_configurator_8h" kindref="compound">Configurator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">rapidjson;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">HDDTest</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_h_d_d_test_1_1_configurator_1a33abd9be7ab39d0dc567d8f86c7b463e" refkind="member"><highlight class="normal">Configurator::Configurator()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>constructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_h_d_d_test_1_1_configurator_1ace450749321fcdc845940c5686d280a7" refkind="member"><highlight class="normal">Configurator::~Configurator()</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>destructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_h_d_d_test_1_1_configurator_1a77eb045da43a5c8ffde204f8e86e9e9e" refkind="member"><highlight class="normal">std::vector&lt;TestScenario<sp/>*&gt;<sp/>*<ref refid="class_h_d_d_test_1_1_configurator_1a77eb045da43a5c8ffde204f8e86e9e9e" kindref="member">HDDTest::Configurator::getTestScenarios</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*pFile<sp/>=<sp/>fopen<sp/>(</highlight><highlight class="stringliteral">&quot;config.json&quot;</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>FileStream<sp/>fs(pFile);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>Document<sp/>d;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>d.ParseStream(fs);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>host<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hostname[1024];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>gethostname(hostname,<sp/>1024);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>&amp;hostSettings<sp/>=<sp/>d[hostname];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>*diskPaths<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>&amp;disks<sp/>=<sp/>hostSettings[</highlight><highlight class="stringliteral">&quot;disks&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Value::ConstValueIterator<sp/>itr<sp/>=<sp/>disks.Begin();<sp/>itr<sp/>!=<sp/>disks.End();<sp/>++itr)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>diskPath<sp/>=<sp/>itr-&gt;GetString();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diskPaths-&gt;push_back(diskPath);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>layout<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>&amp;layoutSettings<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;layouts&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>Layout<sp/>*&gt;<sp/>*layouts<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>Layout<sp/>*&gt;();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Value::ConstMemberIterator<sp/>itr<sp/>=<sp/>layoutSettings.MemberBegin();<sp/>itr<sp/>!=<sp/>layoutSettings.MemberEnd();<sp/>++itr)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>itr-&gt;name.GetString();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>name;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_h_d_d_test_1_1_layout_settings" kindref="compound">LayoutSettings</ref><sp/>layoutSetting;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutSetting.<ref refid="struct_h_d_d_test_1_1_layout_settings_1ae44172312461b7fa707c3c76dcbf834a" kindref="member">mode</ref><sp/>=<sp/>itr-&gt;value[</highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutSetting.<ref refid="struct_h_d_d_test_1_1_layout_settings_1ac0a3416abc480fde8b194b02cbfcad25" kindref="member">pageSizeInKB</ref><sp/>=<sp/>itr-&gt;value[</highlight><highlight class="stringliteral">&quot;pageSizeInKB&quot;</highlight><highlight class="normal">].GetUint();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutSetting.<ref refid="struct_h_d_d_test_1_1_layout_settings_1aea0e0ec07c3ddc2dd198345689f6899e" kindref="member">pagesPerExtent</ref><sp/>=<sp/>itr-&gt;value[</highlight><highlight class="stringliteral">&quot;pagesPerExtent&quot;</highlight><highlight class="normal">].GetUint();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Value::ConstMemberIterator<sp/>relationshipSetting<sp/>=<sp/>itr-&gt;value[</highlight><highlight class="stringliteral">&quot;relationshipAllocation&quot;</highlight><highlight class="normal">].MemberBegin();<sp/>relationshipSetting<sp/>!=<sp/>itr-&gt;value[</highlight><highlight class="stringliteral">&quot;relationshipAllocation&quot;</highlight><highlight class="normal">].MemberEnd();<sp/>++relationshipSetting)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_h_d_d_test_1_1_relationship_config" kindref="compound">RelationshipConfig</ref><sp/>relConf;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relConf.<ref refid="struct_h_d_d_test_1_1_relationship_config_1afd83c7f8b3b77c39814f43e1e86c56c8" kindref="member">name</ref><sp/>=<sp/>relationshipSetting-&gt;name.GetString();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relConf.<ref refid="struct_h_d_d_test_1_1_relationship_config_1aa85591a1ae2dce1683ea483f410d281d" kindref="member">size</ref><sp/>=<sp/>relationshipSetting-&gt;value.GetUint();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutSetting.<ref refid="struct_h_d_d_test_1_1_layout_settings_1a9d2aea674708a168136bd3aba5a27be9" kindref="member">relationships</ref>.push_back(relConf);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layouts-&gt;insert(std::make_pair(name,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_test_1_1_layout" kindref="compound">Layout</ref>(layoutSetting)));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TestScenario<sp/>*&gt;<sp/>*scenarios<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;TestScenario<sp/>*&gt;();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>scenarios</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>Value<sp/>&amp;tests<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;tests&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Value::ConstValueIterator<sp/>testItr<sp/>=<sp/>tests.Begin();<sp/>testItr<sp/>!=<sp/>tests.End();<sp/>++testItr)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_h_d_d_test_1_1_test_settings" kindref="compound">TestSettings</ref><sp/>mainThread;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value<sp/>&amp;testSettings<sp/>=<sp/>*testItr;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>testScenarioName<sp/>=<sp/>testSettings[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value<sp/>&amp;mainThreadSettings<sp/>=<sp/>testSettings[</highlight><highlight class="stringliteral">&quot;mainThread&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainThread.<ref refid="struct_h_d_d_test_1_1_test_settings_1acb1acd81644b7dc295e3cfd187469cb9" kindref="member">name</ref><sp/>=<sp/>mainThreadSettings[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainThread.<ref refid="struct_h_d_d_test_1_1_test_settings_1a689e6ed46e39f14544a7f257c506d9b9" kindref="member">sleep</ref><sp/>=<sp/>mainThreadSettings[</highlight><highlight class="stringliteral">&quot;sleep&quot;</highlight><highlight class="normal">].GetInt64();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainThread.<ref refid="struct_h_d_d_test_1_1_test_settings_1a2ae4bf77f3d9d63cc28ac44622327d23" kindref="member">relationship</ref><sp/>=<sp/>mainThreadSettings[</highlight><highlight class="stringliteral">&quot;relationship&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;struct<sp/>TestSettings&gt;<sp/>backgroundThreads;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value<sp/>&amp;background<sp/>=<sp/>testSettings[</highlight><highlight class="stringliteral">&quot;backgroundThreads&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Value::ConstValueIterator<sp/>itr<sp/>=<sp/>background.Begin();<sp/>itr<sp/>!=<sp/>background.End();<sp/>++itr)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Value<sp/>&amp;backgroundTestSettings<sp/>=<sp/>*itr;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_h_d_d_test_1_1_test_settings" kindref="compound">TestSettings</ref><sp/>backgroundThread;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundThread.<ref refid="struct_h_d_d_test_1_1_test_settings_1acb1acd81644b7dc295e3cfd187469cb9" kindref="member">name</ref><sp/>=<sp/>backgroundTestSettings[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundThread.<ref refid="struct_h_d_d_test_1_1_test_settings_1a689e6ed46e39f14544a7f257c506d9b9" kindref="member">sleep</ref><sp/>=<sp/>backgroundTestSettings[</highlight><highlight class="stringliteral">&quot;sleep&quot;</highlight><highlight class="normal">].GetInt64();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundThread.<ref refid="struct_h_d_d_test_1_1_test_settings_1a2ae4bf77f3d9d63cc28ac44622327d23" kindref="member">relationship</ref><sp/>=<sp/>backgroundTestSettings[</highlight><highlight class="stringliteral">&quot;relationship&quot;</highlight><highlight class="normal">].GetString();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundThreads.push_back(backgroundThread);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_h_d_d_test_1_1_test_scenario" kindref="compound">TestScenario</ref><sp/>*testScenario<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_h_d_d_test_1_1_test_scenario" kindref="compound">TestScenario</ref>(testScenarioName,<sp/>diskPaths,<sp/>layouts,<sp/>mainThread,<sp/>backgroundThreads);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scenarios-&gt;push_back(testScenario);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(pFile);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scenarios;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>HDDTest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/christiandeckert/workspace/DBBenchmark/src/Util/Configurator.cpp"/>
  </compounddef>
</doxygen>

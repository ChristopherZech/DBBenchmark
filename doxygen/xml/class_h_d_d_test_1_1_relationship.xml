<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_h_d_d_test_1_1_relationship" kind="class" prot="public">
    <compoundname>HDDTest::Relationship</compoundname>
    <includes refid="_relationship_8h" local="no">Relationship.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" prot="public" static="no" mutable="no">
        <type>std::vector&lt; struct <ref refid="struct_h_d_d_test_1_1_extent" kindref="compound">Extent</ref> &gt;</type>
        <definition>std::vector&lt;struct Extent&gt; HDDTest::Relationship::extents</definition>
        <argsstring></argsstring>
        <name>extents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="43" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="43" bodyend="-1"/>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1af9d1d6d29eb4bdeb72b4819d68b17956" compoundref="_relationship_8cpp" startline="13" endline="21">Relationship</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a4ad8ec27a4d984c8ee32ab2c7850cea7" compoundref="_relationship_8cpp" startline="28" endline="35">addExtent</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a4056c89b36da88b193ad5121b496a191" compoundref="_relationship_8cpp" startline="37" endline="50">getNextExtent</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a53966cb62025f69c97a18919e83b98c0" compoundref="_relationship_8cpp" startline="52" endline="55">isNextExtent</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1aab85efd51398e63d39757f6687eb0ecb" compoundref="_relationship_8cpp" startline="63" endline="66">getRandomExtent</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a74ccc8382a49d15d4ddd3673edef1ccc" compoundref="_relationship_8cpp" startline="68" endline="71">getRandomPage</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_index_scan_1a63c295ffb3dd74515cf6c6583c9dc462" compoundref="_index_scan_8cpp" startline="17" endline="57">HDDTest::IndexScan::executeTestAlgorithm</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_h_d_d_test_1_1_relationship_1a3de1cc2d49400d4914d958a0ca17f672" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string HDDTest::Relationship::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="44" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="44" bodyend="-1"/>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1af9d1d6d29eb4bdeb72b4819d68b17956" compoundref="_relationship_8cpp" startline="13" endline="21">Relationship</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_h_d_d_test_1_1_relationship_1ada41b15d153b3baa5788de2a66295bcb" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int HDDTest::Relationship::pagesPerExtent</definition>
        <argsstring></argsstring>
        <name>pagesPerExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="46" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="46" bodyend="-1"/>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1af9d1d6d29eb4bdeb72b4819d68b17956" compoundref="_relationship_8cpp" startline="13" endline="21">Relationship</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a74ccc8382a49d15d4ddd3673edef1ccc" compoundref="_relationship_8cpp" startline="68" endline="71">getRandomPage</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_h_d_d_test_1_1_relationship_1ac986788af3ce964e514a737645aa6cd1" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int HDDTest::Relationship::pageSizeInKB</definition>
        <argsstring></argsstring>
        <name>pageSizeInKB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="47" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="47" bodyend="-1"/>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1af9d1d6d29eb4bdeb72b4819d68b17956" compoundref="_relationship_8cpp" startline="13" endline="21">Relationship</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a74ccc8382a49d15d4ddd3673edef1ccc" compoundref="_relationship_8cpp" startline="68" endline="71">getRandomPage</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_h_d_d_test_1_1_relationship_1ab513d2a029feba11f6eecddcb6f71203" prot="private" static="no" mutable="no">
        <type>unsigned long long int</type>
        <definition>unsigned long long int HDDTest::Relationship::unallocatedExtents</definition>
        <argsstring></argsstring>
        <name>unallocatedExtents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="50" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_h_d_d_test_1_1_relationship_1a805470d77c40c2374619a2b7459e1bda" prot="private" static="no" mutable="no">
        <type>unsigned long long int</type>
        <definition>unsigned long long int HDDTest::Relationship::nextExtent</definition>
        <argsstring></argsstring>
        <name>nextExtent</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="51" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1af9d1d6d29eb4bdeb72b4819d68b17956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HDDTest::Relationship::Relationship</definition>
        <argsstring>(std::string, unsigned long long int, unsigned int, unsigned int)</argsstring>
        <name>Relationship</name>
        <param>
          <type>std::string</type>
          <defname>name</defname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>int</declname>
          <defname>size</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>int</declname>
          <defname>pagesPerExtent</defname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>int</declname>
          <defname>pageSizeInKB</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="24" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="13" bodyend="21"/>
        <references refid="class_h_d_d_test_1_1_relationship_1a3de1cc2d49400d4914d958a0ca17f672" compoundref="_relationship_8h" startline="44">name</references>
        <references refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" compoundref="_relationship_8h" startline="43">extents</references>
        <references refid="class_h_d_d_test_1_1_relationship_1ada41b15d153b3baa5788de2a66295bcb" compoundref="_relationship_8h" startline="46">pagesPerExtent</references>
        <references refid="class_h_d_d_test_1_1_relationship_1ac986788af3ce964e514a737645aa6cd1" compoundref="_relationship_8h" startline="47">pageSizeInKB</references>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1a57554a697ebd4128d471dc3a103020c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>HDDTest::Relationship::~Relationship</definition>
        <argsstring>()</argsstring>
        <name>~Relationship</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="25" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1a4ad8ec27a4d984c8ee32ab2c7850cea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HDDTest::Relationship::addExtent</definition>
        <argsstring>(unsigned long long int)</argsstring>
        <name>addExtent</name>
        <param>
          <type>unsigned long long</type>
          <declname>int</declname>
          <defname>start</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="26" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="28" bodyend="35"/>
        <references refid="struct_h_d_d_test_1_1_extent_1aee160e4b0ea953d7164fb41d6a69206c" compoundref="_relationship_8h" startline="18">HDDTest::Extent::startKb</references>
        <references refid="struct_h_d_d_test_1_1_extent_1ac636e4602549d5881611e51b7f10eefd" compoundref="_relationship_8h" startline="17">HDDTest::Extent::number</references>
        <references refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" compoundref="_relationship_8h" startline="43">extents</references>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1aaa19b28455227ef6d859d55f7a789f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int HDDTest::Relationship::getProbability</definition>
        <argsstring>(unsigned long long int)</argsstring>
        <name>getProbability</name>
        <param>
          <type>unsigned long long</type>
          <declname>int</declname>
          <defname>totalUnallocatedExtents</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="28" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1a56e5c53a0f3cb8ea86b18aef057ea61a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HDDTest::Relationship::setUnallocatedExtents</definition>
        <argsstring>(unsigned long long int unallocatedExtents)</argsstring>
        <name>setUnallocatedExtents</name>
        <param>
          <type>unsigned long long int</type>
          <declname>unallocatedExtents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="30" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1aab85efd51398e63d39757f6687eb0ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long int</type>
        <definition>unsigned long long int HDDTest::Relationship::getRandomExtent</definition>
        <argsstring>()</argsstring>
        <name>getRandomExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="37" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="63" bodyend="66"/>
        <references refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" compoundref="_relationship_8h" startline="43">extents</references>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1a74ccc8382a49d15d4ddd3673edef1ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long int</type>
        <definition>unsigned long long int HDDTest::Relationship::getRandomPage</definition>
        <argsstring>()</argsstring>
        <name>getRandomPage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="38" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="68" bodyend="71"/>
        <references refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" compoundref="_relationship_8h" startline="43">extents</references>
        <references refid="class_h_d_d_test_1_1_relationship_1ada41b15d153b3baa5788de2a66295bcb" compoundref="_relationship_8h" startline="46">pagesPerExtent</references>
        <references refid="class_h_d_d_test_1_1_relationship_1ac986788af3ce964e514a737645aa6cd1" compoundref="_relationship_8h" startline="47">pageSizeInKB</references>
        <referencedby refid="class_h_d_d_test_1_1_index_scan_1a63c295ffb3dd74515cf6c6583c9dc462" compoundref="_index_scan_8cpp" startline="17" endline="57">HDDTest::IndexScan::executeTestAlgorithm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1a4056c89b36da88b193ad5121b496a191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long int</type>
        <definition>unsigned long long int HDDTest::Relationship::getNextExtent</definition>
        <argsstring>()</argsstring>
        <name>getNextExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="40" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="37" bodyend="50"/>
        <references refid="class_h_d_d_test_1_1_relationship_1a53966cb62025f69c97a18919e83b98c0" compoundref="_relationship_8cpp" startline="52" endline="55">isNextExtent</references>
        <references refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" compoundref="_relationship_8h" startline="43">extents</references>
        <referencedby refid="class_h_d_d_test_1_1_full_table_scan_1a732473e7440538517ab2c1f6e9e636eb" compoundref="_full_table_scan_8h" startline="18" endline="36">HDDTest::FullTableScan::executeTestAlgorithm</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1ad75f07a4f643229d0a5936746218e447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long long int</type>
        <definition>unsigned long long int HDDTest::Relationship::getNextPage</definition>
        <argsstring>()</argsstring>
        <name>getNextPage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_h_d_d_test_1_1_relationship_1a53966cb62025f69c97a18919e83b98c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool HDDTest::Relationship::isNextExtent</definition>
        <argsstring>()</argsstring>
        <name>isNextExtent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="42" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.cpp" bodystart="52" bodyend="55"/>
        <references refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" compoundref="_relationship_8h" startline="43">extents</references>
        <referencedby refid="class_h_d_d_test_1_1_relationship_1a4056c89b36da88b193ad5121b496a191" compoundref="_relationship_8cpp" startline="37" endline="50">getNextExtent</referencedby>
        <referencedby refid="class_h_d_d_test_1_1_full_table_scan_1a732473e7440538517ab2c1f6e9e636eb" compoundref="_full_table_scan_8h" startline="18" endline="36">HDDTest::FullTableScan::executeTestAlgorithm</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" line="22" column="1" bodyfile="/home/christiandeckert/workspace/DBBenchmark/src/Layout/Relationship.h" bodystart="21" bodyend="53"/>
    <listofallmembers>
      <member refid="class_h_d_d_test_1_1_relationship_1a4ad8ec27a4d984c8ee32ab2c7850cea7" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>addExtent</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a06c160bdbec302af0040fbbadd368c70" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>extents</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a4056c89b36da88b193ad5121b496a191" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>getNextExtent</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1ad75f07a4f643229d0a5936746218e447" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>getNextPage</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1aaa19b28455227ef6d859d55f7a789f37" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>getProbability</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1aab85efd51398e63d39757f6687eb0ecb" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>getRandomExtent</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a74ccc8382a49d15d4ddd3673edef1ccc" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>getRandomPage</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a53966cb62025f69c97a18919e83b98c0" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>isNextExtent</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a3de1cc2d49400d4914d958a0ca17f672" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>name</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a805470d77c40c2374619a2b7459e1bda" prot="private" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>nextExtent</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1ac986788af3ce964e514a737645aa6cd1" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>pageSizeInKB</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1ada41b15d153b3baa5788de2a66295bcb" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>pagesPerExtent</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1af9d1d6d29eb4bdeb72b4819d68b17956" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>Relationship</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a56e5c53a0f3cb8ea86b18aef057ea61a" prot="public" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>setUnallocatedExtents</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1ab513d2a029feba11f6eecddcb6f71203" prot="private" virt="non-virtual"><scope>HDDTest::Relationship</scope><name>unallocatedExtents</name></member>
      <member refid="class_h_d_d_test_1_1_relationship_1a57554a697ebd4128d471dc3a103020c6" prot="public" virt="virtual"><scope>HDDTest::Relationship</scope><name>~Relationship</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
